#!/bin/bash
[ -f $1/state.log ] && STATEFILE=$1/state.log
[ -f $1/gzserver/state.log ] && STATEFILE=$1/gzserver/state.log
[ -f state.log ] && STATEFILE=state.log
[ -f gzserver/state.log ] && STATEFILE=gzserver/state.log

p=`dirname $0`
d=`(cd $p; pwd)`

for x in "$d/../srcsim" "$d/../../srcsim" ; do
    if [ -d "$x" ] ; then
        SRCSIM="$x"
    fi
done

if [ -d "$SRCSIM" ] ; then
    if [ "$1" = "source" ] ; then
        export GAZEBO_PLUGIN_PATH="${SRCSIM}/plugins:${GAZEBO_PLUGIN_PATH}"
        export GAZEBO_MODEL_PATH="${SRCSIM}/models:${GAZEBO_MODEL_PATH}"
        export LD_LIBRARY_PATH="${SRCSIM}/build/devel/lib:${LD_LIBRARY_PATH}"
        export ROS_PACKAGE_PATH="${SRCSIM}:${ROS_PACKAGE_PATH}"
        export PYTHONPATH="${SRCSIM}/build/devel/lib/python2.7/dist-packages:$PYTHONPATH"
        shift
    fi
fi


if [ -z "$STATEFILE" ] ; then
    [ -f "$1" ] && STATEFILE="$1"
    if [ "$1" = "last" ] ; then
        lastdir=`ls -tr ~/.gazebo/log | tail -1`
        if [ -f ~/.gazebo/log/$lastdir/gzserver/state.log ] ; then
            STATEFILE=~/.gazebo/log/$lastdir/gzserver/state.log
        fi
    fi
fi

if [ -z "$STATEFILE" ] ; then
    echo Could not find state.log or gzserver/state.log
    exit 1
fi
killall gzserver
echo Starting roscore
roscore >/dev/null 2>&1 &
roscorepid=$!
echo Sleeping to let roscore settle
sleep 1

echo rosrun gzserver
rosrun gazebo_ros gzserver --verbose -p $STATEFILE  &
echo sleep to let gzserver spin up...
sleep 5

echo rosrun gzclient
rosrun gazebo_ros gzclient
#rosrun gazebo_ros gazebo -p $STATEFILE
kill $roscorepid
sleep 1
killall gzserver

